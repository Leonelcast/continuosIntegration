pipeline  {
    agent any
    tools { 
            maven 'maven-3'
        }
    stages {
        stage('Repo') {
            steps {
               
                 git 'https://github.com/Leonelcast/continuosIntegration'
            }
        }
         stage('SonarQube Analysis') {
            steps {
              withSonarQubeEnv('sonarQube') 
              {
                sh 'mvn clean verify sonar:sonar -Dsonar.password= -Dsonar.login=975fc502c5f657c213cb6b90f33679100fc516c4 '
                
                
                }
            }
        }
        stage("Quality Gate"){
                steps {
                    script {
                        timeout(time: 1, unit: 'HOURS') {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                               mail bcc: '',
                               body: 'El pipeline a fallado revisa el codigo', cc: '', 
                               from: '', replyTo: '',
                               subject: 'Jenkins pipeline no ha tenido exito, revisar el codigo nuevamente antes de hacer el merge', 
                               to: 'castaneda161618@unis.edu.gt'
                               error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
         stage('Email Notification') {
            steps {
               mail bcc: '',
               body: 'El pipeline a compilado con exito', cc: '', 
               from: '', replyTo: '',
               subject: 'Jenkins pipeline ha tenido exito', 
               to: 'castaneda161618@unis.edu.gt'
            }
        }
   }
}
//




