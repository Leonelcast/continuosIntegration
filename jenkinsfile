pipeline  {
    agent any
    tools { 
            maven 'maven-3'
        }
        stages {
        stage('Repo') {
            steps {
               
                 git 'https://github.com/Leonelcast/continuosIntegration'
            }
        }
         stage('SonarQube Analysis') {
            steps {
              withSonarQubeEnv('sonarQube') 
              {
                sh 'mvn clean verify sonar:sonar -Dsonar.password= -Dsonar.login=975fc502c5f657c213cb6b90f33679100fc516c4 '
                
                
                }
            }
        }
        stage("Quality Gate"){
                steps {
                    script {
                        timeout(time: 1, unit: 'HOURS') {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                               mail bcc: '',
                               body: 'El pipeline a fallado revisa el codigo', cc: '', 
                               from: '', replyTo: '',
                               subject: 'Jenkins pipeline no ha tenido exito, revisar el codigo nuevamente antes de hacer el merge', 
                               to: 'castaneda161618@unis.edu.gt'
                               error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }else if(qg.status == 'OK'){
                               mail bcc: '',
                               body: 'Quality gate finalizada con exito', cc: '', 
                               from: '', replyTo: '',
                               subject: 'La calidad del codigo es buena y cumple con los requisitos establecidos en sonarQube', 
                               to: 'castaneda161618@unis.edu.gt'
                        }
                    }
                }
            }
        }
        stage('War Build') {
            steps {
             sh 'mvn package'
              
            }
        }
        stage('Server deployment') {
            steps {
                script{
                deploy adapters: [tomcat9(credentialsId: '6f23dec0-249f-4fc4-9eda-7aff5847abe0', path: '', url: 'http://192.168.1.10:8085/')], contextPath: 'rps', war: '**/*.war'
                }
              
            }
        }
   }/*
    post {
                 always {
                   sh 'mvn test'
                 }
                 success {
                   mail bcc: '',
                   body: 'El pipeline a compilado con exito', cc: '', 
                   from: '', replyTo: '',
                   subject: 'Jenkins pipeline ha tenido exito', 
                   to: 'castaneda161618@unis.edu.gt'
                 }
                 failure {
                    mail bcc: '',
                   body: 'El pipeline ha fallado', cc: '', 
                   from: '', replyTo: '',
                   subject: 'Revisar el codigo debido a que fallo en los unit testing', 
                   to: 'castaneda161618@unis.edu.gt'
                 }
               }*/
   
   
}


